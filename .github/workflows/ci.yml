name: Test, Docker Image CI & Deploy To Cloud

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

env: 
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  REPO_NAME: ${{ secrets.REPO_NAME }}
  
  APP_NAME: app
  APP_TYPE: web

  VERSION: latest
  
  ACR_DOCKERREGISTRY: ${{ secrets.ACR_DOCKERREGISTRY }}
  

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        make install
    - name: Format the code with black
      run: |
        make format
    - name: Analysing the code with pylint
      run: |
        make lint
    - name: Testing python with pytest
      run: |
        make testing
  
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v3
    - name: Build the pypi python image
      run: make build-pypi
          
    - name: Build the Docker images
      run: |
          make docker APP=${{ env.APP_NAME }} IMAGE=${{ env.REPO_NAME }}-${{ env.APP_TYPE}} VERSION=${{ env.VERSION }}

    - name: Login to Heroku Container registry
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: | 
        heroku container:login
        docker tag ${{ env.REPO_NAME }}-${{ env.APP_TYPE}} registry.heroku.com/${{ env.REPO_NAME }}-${{ env.APP_TYPE}}:$VERSION
        docker push registry.heroku.com/${{ env.REPO_NAME }}-${{ env.APP_TYPE}}:$VERSION


    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: actions/checkout@v3
    - name: Login to Azure Container registry and push the image
      run: |
        az acr login --name ${{ env.ACR_DOCKERREGISTRY }}
        docker tag ${{ env.REPO_NAME }}-${{ env.APP_TYPE}} ${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.REPO_NAME }}-${{ env.APP_TYPE}}:$VERSION
        docker push ${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.REPO_NAME }}-${{ env.APP_TYPE}}:$VERSION


  deploy-heroku:
    needs: ["test", "build"]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Release
      run: |
        echo ${{ env.REPO_NAME }}-${{ env.APP_TYPE}}
        heroku container:release -a ${{ env.REPO_NAME }}-${{ env.APP_TYPE}} web
       
      

  deploy-azure-to-staging:
    needs: ["test", "build"]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME}}-${{ env.REPO_NAME }}-${{ env.APP_TYPE }}
        # slot-name: 'development'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.REPO_NAME }}-${{ env.APP_TYPE}}:${{ env.VERSION }}'
   

  deploy-azure-to-production:
    needs: deploy-azure-to-staging
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  

    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}


    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME}}-${{ env.REPO_NAME }}-${{ env.APP_TYPE }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.REPO_NAME }}-${{ env.APP_TYPE}}:${{ env.VERSION }}'
