name: Test, Docker Image CI & Deploy To Cloud

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

env: 
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  REPO_NAME: ${{ secrets.REPO_NAME }}
  OWNER: ${{ github.repository_owner }}
  
  APP_NAME: app

  # VERSION: latest
  
  IMAGE: ${{ secrets.REPO_NAME }}-web

  ACR_DOCKERREGISTRY: ${{ secrets.ACR_DOCKERREGISTRY }}

  

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10"]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}

  #   - name: Install dependencies
  #     run: |
  #       make install
  #   - name: Format the code with black
  #     run: |
  #       make format
  #   - name: Analysing the code with pylint
  #     run: |
  #       make lint
  #   - name: Testing python with pytest
  #     run: |
  #       make testing
  
  build-and-deploy:
    # needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@main
    - name: Build the pypi python image
      run: make build-pypi
          
    - name: Build the Docker images
      run: |
          export APP=${{ env.APP_NAME }}
          export IMAGE=${{ env.IMAGE }}
          export VERSION=${{ github.sha }}
          make docker 
      
    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_DOCKERREGISTRY }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
     
     
    - name: Push container image to registry 
      run: |
        # docker build --build-arg OPENAI_API_KEY=${{ env.OPENAI_API_KEY }} . -t ${{ env.IMAGE }}:${{ github.sha }} -f ./${{ env.APP_NAME }}/Dockerfile
        # docker build . -t ${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.IMAGE }}:${{ github.sha }}
        docker tag ${{ env.IMAGE }}:${{ github.sha }} ${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.IMAGE }}:${{ github.sha }}
        docker push ${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.IMAGE }}:${{ github.sha }}
        
        
    - name: Deploy to App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'weisshorntech-${{ env.IMAGE }}'
        images: '${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.IMAGE }}:${{ github.sha }}'
        slot-name: 'staging'

    - name: Azure logout
      run: |
        az logout

