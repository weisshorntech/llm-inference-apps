name: Test, Docker Image CI & Deploy To Cloud

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

env: 
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  LIB_NAME: ${{ secrets.LIB_NAME }}
  APP_NAME: app
  VERSION: latest
  

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        make install
    - name: Format the code with black
      run: |
        make format
    - name: Analysing the code with pylint
      run: |
        make lint
    - name: Testing python with pytest
      run: |
        make testing
  
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Build the pypi python image
      run: make build-pypi
          
    - name: Build the Docker images
      run: |
          export VERSION=$VERSION
          make docker APP=${{ env.APP_NAME }} IMAGE=${{ env.LIB_NAME }} VERSION=$VERSION
      
    #- name: Login to Heroku Container registry
    #  run: heroku container:login
      
    #- name: Build and push
    #  # run: heroku container:push -a $HEROKU_APP_NAME web
    #  # run: docker push ${{ env.IMAGE }}:$VERSION
    #  run: | 
    #    docker push ${{ env.IMAGE_BACKEND }}:$VERSION
    #    docker push ${{ env.IMAGE_FRONTEND }}:$VERSION
      
  #deploy:
  #  needs: ["test", "build"]
  #  runs-on: ubuntu-latest
    
  #  steps:
  #  - uses: actions/checkout@v3
  #  - name: Release
  #    # run: heroku container:release -a $HEROKU_APP_NAME web
  #    run: |
  #      heroku container:release -a $HEROKU_BACKEND_NAME web
  #      heroku container:release -a $HEROKU_FRONTEND_NAME web
      
