name: Test, Docker Image CI & Deploy To Cloud

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

env: 
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  REPO_NAME: ${{ github.repository }}

  APP_NAME: app
  APP_TYPE: web

  VERSION: latest
  
  ACR_DOCKERREGISTRY: ${{ secrets.ACR_DOCKERREGISTRY }}
  

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        make install
    - name: Format the code with black
      run: |
        make format
    - name: Analysing the code with pylint
      run: |
        make lint
    - name: Testing python with pytest
      run: |
        make testing
  
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Build the pypi python image
      run: make build-pypi
          
    - name: Build the Docker images
      run: |
          make docker APP=${{ env.APP_NAME }} IMAGE=${{ env.REPO_NAME }}-${{ env.APP_TYPE}} VERSION=${{ env.VERSION }}
      
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - uses: actions/checkout@v3
    # - name: Login to Azure Container registry
    #   run: |
    #     az acr login --name ${{ env.ACR_DOCKERREGISTRY }}
    #     # TOKEN=$(az acr login --name  ${{ env.ACR_DOCKERREGISTRY }} --expose-token --output tsv --query accessToken)
      
    - name: Build and push
      # run: heroku container:push -a $HEROKU_APP_NAME web
      # run: docker push ${{ env.IMAGE }}:$VERSION
      run: | 
        docker push ${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.REPO_NAME }}-${{ env.APP_TYPE}}:$VERSION
  deploy:
    needs: ["test", "build"]
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: mywebapp
        package: '${{ env.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.REPO_NAME }}-${{ env.APP_TYPE}}:latest'      


  # deploy:
  #   needs: ["test", "build"]
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Release
  #     # run: heroku container:release -a $HEROKU_APP_NAME web
  #     run: |
  #       az webapp create --resource-group my-resource-group --plan my-appservice-plan --name ${{ env.APP_NAME }} --deployment-container-image-name ${{ secrets.ACR_DOCKERREGISTRY }}.azurecr.io/${{ env.LIB_NAME }}:$VERSION

  #       heroku container:release -a $HEROKU_BACKEND_NAME web
  #       heroku container:release -a $HEROKU_FRONTEND_NAME web

