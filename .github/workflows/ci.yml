name: Test, Docker Image CI & Deploy To Cloud

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

env: 
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  LIB_NAME: ${{ secrets.LIB_NAME }}
  APP_NAME: app
  VERSION: latest
  

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        make install
    - name: Format the code with black
      run: |
        make format
    - name: Analysing the code with pylint
      run: |
        make lint
    - name: Testing python with pytest
      run: |
        make testing
  
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Build the pypi python image
      run: make build-pypi
          
    - name: Build the Docker images
      run: |
          export VERSION=$VERSION
          make docker APP=${{ env.APP_NAME }} IMAGE=${{ secrets.ACR_NAME }}.azurecr.io/${{ env.LIB_NAME }} VERSION=$VERSION
      
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: actions/checkout@v3
    - name: Login to Azure Container registry
      run: |
        az acr login --name ${{ secrets.ACR_NAME }} --expose-token
        TOKEN=$(az acr login --name  ${{ secrets.ACR_NAME }} --expose-token --output tsv --query accessToken)
        echo $TOKEN
      
    - name: Build and push
      # run: heroku container:push -a $HEROKU_APP_NAME web
      # run: docker push ${{ env.IMAGE }}:$VERSION
      run: | 
        docker login ${{ secrets.ACR_NAME }}.azurecr.io --username 00000000-0000-0000-0000-000000000000 --password $TOKEN
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.LIB_NAME }}:$VERSION
      
  deploy:
    
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
    - uses: actions/checkout@v3
    - name: Retrieve the token
      run: |
        TOKEN=$(az acr login --name  ${{ secrets.ACR_NAME }} --expose-token --output tsv --query accessToken)

    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1'
      with:
        resource-group: my-resource-group
        dns-name-label: url-for-container
        image: ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.LIB_NAME }}:$VERSION
        cpu: 1   #Optional
        memory: 0.1   #Optional
        registry-username: 00000000-0000-0000-0000-000000000000
        registry-password: $TOKEN
        name: ${{ secrets.ACR_NAME }}-container
        location: 'switzerland north'

  # deploy:
  #   needs: ["test", "build"]
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Release
  #     # run: heroku container:release -a $HEROKU_APP_NAME web
  #     run: |
  #       az webapp create --resource-group my-resource-group --plan my-appservice-plan --name ${{ env.APP_NAME }} --deployment-container-image-name ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.LIB_NAME }}:$VERSION

  #       heroku container:release -a $HEROKU_BACKEND_NAME web
  #       heroku container:release -a $HEROKU_FRONTEND_NAME web

